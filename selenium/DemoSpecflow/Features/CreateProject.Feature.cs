// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DemoSpecflow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Create New Project")]
    [NUnit.Framework.CategoryAttribute("BDDCreateProject")]
    public partial class CreateNewProjectFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "BDDCreateProject"};
        
#line 1 "CreateProject.Feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Create New Project", "    As an admin \r\n    I want to create a new project", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a new project")]
        [NUnit.Framework.CategoryAttribute("DemoCreateProject")]
        [NUnit.Framework.TestCaseAttribute("Project013", "Fixed Price", "Running", "Mar 11, 2001", "Apr 20, 2021", "10", "USA", "Ly Vo (ly_vo)", "SM_KN (kn_sm)", "SM_KN (kn_sm)", "Short Description 1", "Long Description 1", "Specflow, C#", "Client Name 1", "Technology", "Client Description 1", null)]
        public void CreateANewProject(
                    string projectName, 
                    string projectType, 
                    string projectStatus, 
                    string startDate, 
                    string endDate, 
                    string size, 
                    string location, 
                    string projectManager, 
                    string deliveryManager, 
                    string engagementManager, 
                    string shortDescription, 
                    string longDescription, 
                    string technologies, 
                    string clientName, 
                    string clientIndustry, 
                    string clientDescription, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DemoCreateProject"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("ProjectName", projectName);
            argumentsOfScenario.Add("ProjectType", projectType);
            argumentsOfScenario.Add("ProjectStatus", projectStatus);
            argumentsOfScenario.Add("StartDate", startDate);
            argumentsOfScenario.Add("EndDate", endDate);
            argumentsOfScenario.Add("Size", size);
            argumentsOfScenario.Add("Location", location);
            argumentsOfScenario.Add("ProjectManager", projectManager);
            argumentsOfScenario.Add("DeliveryManager", deliveryManager);
            argumentsOfScenario.Add("EngagementManager", engagementManager);
            argumentsOfScenario.Add("ShortDescription", shortDescription);
            argumentsOfScenario.Add("LongDescription", longDescription);
            argumentsOfScenario.Add("Technologies", technologies);
            argumentsOfScenario.Add("ClientName", clientName);
            argumentsOfScenario.Add("ClientIndustry", clientIndustry);
            argumentsOfScenario.Add("ClientDescription", clientDescription);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a new project", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
    testRunner.Given("I login as an admin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
    testRunner.And("I click on Projects dropdown menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
    testRunner.And("I click on Create Project button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1.AddRow(new string[] {
                            "ProjectName",
                            string.Format("{0}", projectName)});
                table1.AddRow(new string[] {
                            "ProjectType",
                            string.Format("{0}", projectType)});
                table1.AddRow(new string[] {
                            "ProjectStatus",
                            string.Format("{0}", projectStatus)});
                table1.AddRow(new string[] {
                            "StartDate",
                            string.Format("{0}", startDate)});
                table1.AddRow(new string[] {
                            "EndDate",
                            string.Format("{0}", endDate)});
                table1.AddRow(new string[] {
                            "Size",
                            string.Format("{0}", size)});
                table1.AddRow(new string[] {
                            "Location",
                            string.Format("{0}", location)});
                table1.AddRow(new string[] {
                            "ProjectManager",
                            string.Format("{0}", projectManager)});
                table1.AddRow(new string[] {
                            "DeliveryManager",
                            string.Format("{0}", deliveryManager)});
                table1.AddRow(new string[] {
                            "EngagementManager",
                            string.Format("{0}", engagementManager)});
                table1.AddRow(new string[] {
                            "ShortDescription",
                            string.Format("{0}", shortDescription)});
                table1.AddRow(new string[] {
                            "LongDescription",
                            string.Format("{0}", longDescription)});
                table1.AddRow(new string[] {
                            "Technologies",
                            string.Format("{0}", technologies)});
                table1.AddRow(new string[] {
                            "ClientName",
                            string.Format("{0}", clientName)});
                table1.AddRow(new string[] {
                            "ClientIndustry",
                            string.Format("{0}", clientIndustry)});
                table1.AddRow(new string[] {
                            "ClientDescription",
                            string.Format("{0}", clientDescription)});
#line 11
    testRunner.When("I create new project with info below", ((string)(null)), table1, "When ");
#line hidden
#line 29
    testRunner.And("I click on Create button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
    testRunner.Then("I should see the detailed project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
