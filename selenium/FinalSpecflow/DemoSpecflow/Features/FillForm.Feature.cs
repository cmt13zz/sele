// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DemoSpecflow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Fill Application Form and Submit")]
    [NUnit.Framework.CategoryAttribute("bddFillForm")]
    public partial class FillApplicationFormAndSubmitFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "bddFillForm"};
        
#line 1 "FillForm.Feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Fill Application Form and Submit", "    As a ramdom user\r\n    I want to fill the fields in the application form", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Fill all fields in the application form")]
        [NUnit.Framework.CategoryAttribute("fill_all_fields_in_the_application_form")]
        [NUnit.Framework.TestCaseAttribute("Chuong", "To", "ct@gmail.com", "Female", "0123456789", "08 December,2022", "Maths", "Sports", "rodi.png", "123 ABCD", null)]
        public void FillAllFieldsInTheApplicationForm(string firstName, string lastName, string email, string gender, string mobile, string dateOfBirth, string subjects, string hobbies, string picture, string currentAddress, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "fill_all_fields_in_the_application_form"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("FirstName", firstName);
            argumentsOfScenario.Add("LastName", lastName);
            argumentsOfScenario.Add("Email", email);
            argumentsOfScenario.Add("Gender", gender);
            argumentsOfScenario.Add("Mobile", mobile);
            argumentsOfScenario.Add("DateOfBirth", dateOfBirth);
            argumentsOfScenario.Add("Subjects", subjects);
            argumentsOfScenario.Add("Hobbies", hobbies);
            argumentsOfScenario.Add("Picture", picture);
            argumentsOfScenario.Add("CurrentAddress", currentAddress);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fill all fields in the application form", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
        testRunner.And("I navigate to the Application Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table5.AddRow(new string[] {
                            "FirstName",
                            string.Format("{0}", firstName)});
                table5.AddRow(new string[] {
                            "LastName",
                            string.Format("{0}", lastName)});
                table5.AddRow(new string[] {
                            "Email",
                            string.Format("{0}", email)});
                table5.AddRow(new string[] {
                            "Gender",
                            string.Format("{0}", gender)});
                table5.AddRow(new string[] {
                            "Mobile",
                            string.Format("{0}", mobile)});
                table5.AddRow(new string[] {
                            "DateOfBirth",
                            string.Format("{0}", dateOfBirth)});
                table5.AddRow(new string[] {
                            "Subjects",
                            string.Format("{0}", subjects)});
                table5.AddRow(new string[] {
                            "Hobbies",
                            string.Format("{0}", hobbies)});
                table5.AddRow(new string[] {
                            "Picture",
                            string.Format("{0}", picture)});
                table5.AddRow(new string[] {
                            "CurrentAddress",
                            string.Format("{0}", currentAddress)});
#line 10
        testRunner.When("I input text in all fields with info below", ((string)(null)), table5, "When ");
#line hidden
#line 23
        testRunner.And("I click on Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table6.AddRow(new string[] {
                            "FirstName",
                            string.Format("{0}", firstName)});
                table6.AddRow(new string[] {
                            "LastName",
                            string.Format("{0}", lastName)});
                table6.AddRow(new string[] {
                            "Email",
                            string.Format("{0}", email)});
                table6.AddRow(new string[] {
                            "Gender",
                            string.Format("{0}", gender)});
                table6.AddRow(new string[] {
                            "Mobile",
                            string.Format("{0}", mobile)});
                table6.AddRow(new string[] {
                            "DateOfBirth",
                            string.Format("{0}", dateOfBirth)});
                table6.AddRow(new string[] {
                            "Subjects",
                            string.Format("{0}", subjects)});
                table6.AddRow(new string[] {
                            "Hobbies",
                            string.Format("{0}", hobbies)});
                table6.AddRow(new string[] {
                            "Picture",
                            string.Format("{0}", picture)});
                table6.AddRow(new string[] {
                            "CurrentAddress",
                            string.Format("{0}", currentAddress)});
#line 24
        testRunner.Then("I see the detailed project popup", ((string)(null)), table6, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Fill mandatory fields in the application form")]
        [NUnit.Framework.CategoryAttribute("fill_mandatory_fields_in_the_application_form")]
        [NUnit.Framework.TestCaseAttribute("Chuong", "To", "Female", "0123456789", null)]
        public void FillMandatoryFieldsInTheApplicationForm(string firstName, string lastName, string gender, string mobile, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "fill_mandatory_fields_in_the_application_form"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("FirstName", firstName);
            argumentsOfScenario.Add("LastName", lastName);
            argumentsOfScenario.Add("Gender", gender);
            argumentsOfScenario.Add("Mobile", mobile);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fill mandatory fields in the application form", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 43
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 45
        testRunner.And("I navigate to the Application Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table7.AddRow(new string[] {
                            "FirstName",
                            string.Format("{0}", firstName)});
                table7.AddRow(new string[] {
                            "LastName",
                            string.Format("{0}", lastName)});
                table7.AddRow(new string[] {
                            "Gender",
                            string.Format("{0}", gender)});
                table7.AddRow(new string[] {
                            "Mobile",
                            string.Format("{0}", mobile)});
#line 46
        testRunner.When("I input text in mandatory fields with info below", ((string)(null)), table7, "When ");
#line hidden
#line 52
        testRunner.And("I click on Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
        testRunner.Then(string.Format("I see the detailed project popup with mandatory fields: \"{0}\", \"{1}\", \"{2}\", \"{3}" +
                            "\"", firstName, lastName, gender, mobile), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
